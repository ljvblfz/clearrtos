#******************************************************************************
#*                                                                            *
#* This program is distributed in the hope that it will be useful, but        *
#* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY *
#* or FITNESS FOR A PARTICULAR PURPOSE. This file and program are licensed    *
#* under the GNU Lesser General Public License Version 3, 29 June 2007.       *
#* The complete license can be accessed from the following location:          *
#* http://opensource.org/licenses/lgpl-3.0.html                               *
#*                                                                            *
#* Author: Yun Li (yunli.open@gmail.com)                                      *
#*   Date: 05/22/2010                                                         *
#*                                                                            *
#******************************************************************************

#******************************************************************************
# REVISION HISTORY
# ================
# 
# Date     Version  Name          Description
# -------- -------  ------------  --------------------------------------------
#
# -------- -------  ------------  --------------------------------------------
#
#******************************************************************************
 
MKDIR = mkdir
RM = rm
CHKER = lint-nt.exe

RMFLAGS = -fr
ARFLAGS = crs
CFLAGS += -std=gnu99
CHKFLAGS = -v std.lnt

ROOT := $(abspath $(ROOT))
BUILD := $(abspath $(BUILD))

ifeq ("$(MAKECMDGOALS)", "")
MAKECMDGOALS = release
endif

ifeq ("$(MAKECMDGOALS)", "release")
DIR_OBJS = robjs
AR = ar
CC = gcc
CFLAGS += -Wall -gdwarf-2 -g3 -O2
endif

ifeq ("$(MAKECMDGOALS)", "debug")
DIR_OBJS = dobjs
AR = ar
CC = gcc
CFLAGS += -Werror -gdwarf-2 -g3
endif

ifeq ("$(MAKECMDGOALS)", "unitest")
DIR_OBJS = uobjs
AR = ar
CC = gcc
CFLAGS += -Werror -gdwarf-2 -g3 -DUNITEST -fprofile-arcs -ftest-coverage
LINK_LIBS += gcov
endif

ifeq ("$(MAKECMDGOALS)", "scheck")
DIR_OBJS = sobjs
endif

DIR_TARGET = $(BUILD)/$(MAKECMDGOALS)
DIRS = $(DIR_OBJS) $(DIR_TARGET)
DIR_CHKER = $(ROOT)/tools/lint

SRCS = $(wildcard *.c)
ASMS = $(wildcard *.S)
UTS = $(wildcard unitest_*.c)
OBJS := $(addprefix $(DIR_OBJS)/, $(SRCS:.c=.o)) $(addprefix $(DIR_OBJS)/, $(ASMS:.S=.o))
DEPS := $(addprefix $(DIR_OBJS)/, $(SRCS:.c=.dep)) $(addprefix $(DIR_OBJS)/, $(ASMS:.S=.dep))
CHKS := $(addprefix $(DIR_OBJS)/, $(SRCS:.c=.chk))
RMS = robjs dobjs uobjs sobjs

ifneq ("$(EXE)", "")
EXE := $(addprefix $(DIR_TARGET)/, $(EXE))
RMS += $(EXE)
endif
ifneq ("$(UTS)", "")
UTS := $(addprefix $(DIR_TARGET)/, $(UTS:.c=.exe))
RMS += $(UTS)
endif
ifneq ("$(LIB)", "")
LIB := $(addprefix $(DIR_TARGET)/, $(LIB))
RMS += $(LIB)
endif

ifeq ("$(wildcard $(DIR_OBJS))", "")
DEP_DIR_OBJS := $(DIR_OBJS)
endif
ifeq ("$(wildcard $(DIR_TARGET))", "")
DEP_DIR_TARGET := $(DIR_TARGET)
endif

ifneq ("$(INCLUDE_DIRS)", "")
ifeq ($(MAKECMDGOALS), scheck)
CHK_INCLUDE_DIRS += $(INCLUDE_DIRS)
CHK_INCLUDE_DIRS := $(shell cygpath -w -p $(CHK_INCLUDE_DIRS))
CHK_INCLUDE_DIRS := $(addprefix ", $(CHK_INCLUDE_DIRS))
CHK_INCLUDE_DIRS := $(addsuffix ", $(CHK_INCLUDE_DIRS))
CHK_INCLUDE_DIRS := $(addprefix -I, $(CHK_INCLUDE_DIRS))
CHK_INCLUDE_DIRS := $(strip $(CHK_INCLUDE_DIRS))
endif
INCLUDE_DIRS := $(addprefix -I, $(INCLUDE_DIRS))
INCLUDE_DIRS := $(strip $(INCLUDE_DIRS))
endif

ifneq ("$(LINK_LIBS)", "")
LINK_LIBS := $(strip $(LINK_LIBS))
LIB_ALL := $(notdir $(wildcard $(DIR_TARGET)/*))
LIB_FILTERED := $(addsuffix %, $(addprefix lib, $(LINK_LIBS)))
$(eval DEP_LIBS = $(filter $(LIB_FILTERED), $(LIB_ALL)))
DEP_LIBS := $(addprefix $(DIR_TARGET)/, $(DEP_LIBS))
LINK_LIBS := $(addprefix -l, $(LINK_LIBS))
endif

.PHONY: release debug clean unitest scheck
release debug unitest: $(EXE) $(UTS) $(LIB)
clean:
	-$(RM) $(RMFLAGS) $(RMS)
scheck: $(CHKS)

ifneq ("$(MAKECMDGOALS)", "clean")
include $(DEPS)
endif

ifeq ($(MAKECMDGOALS), scheck)
CHK_CHKER_DIR += $(DIR_CHKER)
CHK_CHKER_DIR := $(shell cygpath -w -p $(CHK_CHKER_DIR))
CHK_CHKER_DIR := $(addprefix ", $(CHK_CHKER_DIR))
CHK_CHKER_DIR := $(addsuffix ", $(CHK_CHKER_DIR))
CHK_CHKER_DIR := $(addprefix -I, $(CHK_CHKER_DIR))
CHK_CHKER_DIR := $(strip $(CHK_CHKER_DIR))
CHK_ROOT_DIR := $(shell cygpath -w -p $(ROOT))
endif

$(DIRS):
	$(MKDIR) $@
$(EXE): $(DEP_DIR_TARGET) $(OBJS) $(DEP_LIBS)
	$(CC) -L$(DIR_TARGET) -o $@ $(filter %.o, $^) -Wl,-Map=$@.map $(LINK_LIBS)
$(UTS): $(DEP_DIR_TARGET) $(DEP_LIBS)
	$(CC) -L$(DIR_TARGET) -o $@ $(filter %.o, $^) -Wl,-Map=$@.map $(LINK_LIBS)
$(LIB): $(DEP_DIR_TARGET) $(OBJS)
	$(AR) $(ARFLAGS) $@ $(filter %.o, $^)

$(DIR_OBJS)/%.o: $(DEP_DIR_OBJS) %.c
	$(CC) $(CFLAGS) $(INCLUDE_DIRS) -o $@ -c $(filter %.c, $^)
$(DIR_OBJS)/%.o: $(DEP_DIR_OBJS) %.S
	$(CC) $(CFLAGS) $(INCLUDE_DIRS) -o $@ -c $(filter %.S, $^)
$(DIR_OBJS)/%.dep: $(DEP_DIR_OBJS) %.c
	@echo "Creating $@ ..."
	@set -e ; \
	$(CC) $(INCLUDE_DIRS) -E -MM -MF $@ -MT "$(subst .dep,.o,$@) $@ $(subst .dep,.chk,$@)" $(filter %.c, $^); \
	if [ -n "$(UTS)" ] ; then echo "$(DIR_TARGET)/$*.exe: $(DIR_OBJS)/$*.o" >> $@ ; fi
$(DIR_OBJS)/%.dep: $(DEP_DIR_OBJS) %.S
	@echo "Creating $@ ..."
	@set -e ; \
	$(CC) $(INCLUDE_DIRS) -E -MM -MF $@ -MT "$(subst .dep,.o,$@) $@" $(filter %.S, $^);
$(DIR_OBJS)/%.chk: $(DEP_DIR_OBJS) %.c
	$(DIR_CHKER)/$(CHKER) $(CHK_CHKER_DIR) $(CHK_INCLUDE_DIRS) $(CHKFLAGS) -libdir"($(CHK_ROOT_DIR)\*)" $(filter %.c, $^)
	@touch $@
